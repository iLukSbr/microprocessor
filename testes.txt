Crivo com raiz quadrada:
      0  => B"1000_0000_0000_0000001", -- LI R0, 1
      1  => B"1000_0001_0000_0000001", -- LI R1, 1
      2  => B"1000_0010_0000_0100000", -- LI R2, 32
      3  => B"0011_0111_0010_0000000", -- CLZ R7, R2
      4  => B"1110_0001_0000_0000001", -- LOAD_LOOP: SW R0, 0(R1)
      5  => B"0100_0000_0000_0000001", -- ADDI R0, 1
      6  => B"0100_0001_0000_0000001", -- ADDI R1, 1
      7  => B"0111_0000_0010_0000000", -- CMP R0, R2
      8  => B"1100_0000_0000_0000100", -- BLO LOAD_LOOP
      9  => B"1000_0011_0000_0000000", -- LI R3, 0
      10 => B"1000_0100_0000_0000001", -- LI R4, 1
      11 => B"1000_0101_0000_0000000", -- LI R5, 0
      12 => B"0001_0101_0011_0000000", -- SQRT_LOOP: ADD R5, R3
      13 => B"0001_0101_0100_0000000", -- ADD R5, R4
      14 => B"0001_0110_0101_0000000", -- ADD R6, R5
      15 => B"0001_0110_0101_0000000", -- ADD R6, R5
      16 => B"0111_0110_0010_0000000", -- CMP R6, R2
      17 => B"1010_0000_0000_0010101", -- BHI END_SQRT
      18 => B"0100_0011_0000_0000001", -- ADDI R3, 1
      19 => B"0100_0100_0000_0000010", -- ADDI R4, 2
      20 => B"1111_0000_0000_0001100", -- JMP SQRT_LOOP
      21 => B"1001_0000_0000_0000000", -- END_SQRT: CLR R0
      22 => B"1000_0001_0000_0000001", -- LI R1, 1
      23 => B"0100_0011_0000_0000001", -- ADDI R3, 1
      24 => B"0100_0001_0000_0000001", -- TILL_SQRT_LOOP: ADDI R1, 1
      25 => B"0111_0001_0011_0000000", -- CMP R1, R3
      26 => B"1100_0000_0000_0011100", -- BLO CHECK_ZERO_LOOP
      27 => B"1111_0000_0000_0100110", -- JMP POST_READ
      28 => B"1101_0100_0001_0000000", -- CHECK_ZERO_LOOP: LW R4, 0(R1)
      29 => B"0111_0100_0000_0000000", -- CMP R4, R0
      30 => B"1010_0000_0000_0100000", -- BHI ELIMINATION_LOOP
      31 => B"1111_0000_0000_0010111", -- JMP TILL_SQRT_LOOP
      32 => B"0001_0001_0100_0000000", -- ELIMINATION_LOOP: ADD R1, R4
      33 => B"1110_0001_0000_0000000", -- SW R0, 0(R1)
      34 => B"0011_0101_0001_0000000", -- CLZ R5, R1
      35 => B"0111_0101_0111_0000000", -- CMP R5, R7
      36 => B"1010_0000_0000_0100000", -- BHI ELIMINATION_LOOP
      37 => B"1111_0000_0000_0011000", -- JMP TILL_SQRT_LOOP
      38 => B"1000_0001_0000_0000001", -- POST_READ: LI R1, 1
      39 => B"0100_0001_0000_0000001", -- PRIME_LOOP: ADDI R1, 1
      40 => B"0011_0011_0001_0000000", -- CLZ R3, R1
      41 => B"0111_0011_0111_0000000", -- CMP R3, R7
      42 => B"1010_0000_0000_0101100", -- BHI CHECK_ZERO_LOOP2
      43 => B"1111_0000_0000_0110001", -- JMP FINISH
      44 => B"1101_0010_0001_0000000", -- CHECK_ZERO_LOOP2: LW R2, 0(R1)
      45 => B"0111_0010_0000_0000000", -- CMP R2, R0
      46 => B"1010_0000_0000_0110000", -- BHI PRINT_LOOP
      47 => B"1111_0000_0000_0100111", -- JMP PRIME_LOOP
      48 => B"0110_0001_0010_0000000", -- PRINT_LOOP: MOV R2, R1
      49 => B"1001_0001_0000_0000000", -- FINISH: CLR R1
      50 => B"1001_0010_0000_0000000", -- CLR R2
      51 => B"1001_0011_0000_0000000", -- CLR R3
      52 => B"1001_0100_0000_0000000", -- CLR R4
      53 => B"1001_0101_0000_0000000", -- CLR R5
      54 => B"1001_0110_0000_0000000", -- CLR R6
      55 => B"1001_0111_0000_0000000", -- CLR R7
      56 => B"1111_0000_0000_1111110", -- JMP 126

Teste RAM
      0 => B"1000_0000_0000_0000001", -- LI R0, 1
      1 => B"1000_0001_0000_0000010", -- LI R1, 2
      2 => B"1110_0000_0000_0000000", -- SW R0, 0(R0)
      3 => B"1101_0010_0000_0000000", -- LW R2, 0(R0)
      4 => B"1110_0000_0001_0000010", -- SW R1, 2(R1)
      5 => B"1101_0011_0000_0000001", -- LW R3, 1(R1)
      6 => B"1110_0001_0001_1111110", -- SW R1, -2(R1)
      7 => B"1101_0100_0001_1111111", -- LW R4, -1(R1)
      8 => B"1111_0000_0000_1111110", -- JMP 126